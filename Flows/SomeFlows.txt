[{"id":"78ad5814.379f3","type":"tab","label":"Cool Flow 1","disabled":false,"info":""},{"id":"a41813bc.9614e","type":"particle-subscribe","z":"78ad5814.379f3","name":"heartbeat","auth":"8fc766a0.ee9ea","scope":"user","product":"","event":"heartbeat","device":"","x":100,"y":80,"wires":[["72774619.19d02"]]},{"id":"d948a987.17cd1","type":"debug","z":"78ad5814.379f3","name":"Send to debug window","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":490,"y":280,"wires":[]},{"id":"72774619.19d02","type":"function","z":"78ad5814.379f3","name":"Adds Timestamp","func":"// create a javascript object using the JSON message payload\nvar newMessage = JSON.parse(msg.payload);\n// add a time field to the new object\nnewMessage.time = new Date();\n// represent the new object as JSON\nmsg.payload = JSON.stringify(newMessage);\n// pass it on to the next node\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":130,"y":200,"wires":[["e1011a7f.22613"]]},{"id":"e1011a7f.22613","type":"function","z":"78ad5814.379f3","name":"Adds onTime status","func":"// get the old message Date\nvar storedDate = context.get(\"storedDate\");\n// store the time of this message in the context for next time\ncontext.set(\"storedDate\",new Date());\n\nvar onTime = true;;\nvar diffTime = 0;\n// The first message is never late\nif(storedDate == null) {\n    onTime = true;\n}\n// Not the first time we have received a message\nelse {\n    var msgObj = JSON.parse(msg.payload);\n    var msgDateObj = new Date(msgObj.time);\n    diffTime = Math.abs(msgDateObj - storedDate);\n    // check if more than 12 seconds\n    if(diffTime > 12000) {\n        onTime = false;\n    }\n}\n\nvar newMessageObj = JSON.parse(msg.payload);\nnewMessageObj.onTime = onTime;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":140,"y":360,"wires":[["a24265d4.6d5678"]]},{"id":"5add870d.4b28c","type":"http request","z":"78ad5814.379f3","d":true,"name":"","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":130,"y":580,"wires":[["e4b996dc.a897d"]]},{"id":"e4b996dc.a897d","type":"debug","z":"78ad5814.379f3","name":"Debug node message payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":670,"y":360,"wires":[]},{"id":"4dff0366.6d168c","type":"websocket out","z":"78ad5814.379f3","d":true,"name":"Node-RED To Websocket","server":"","client":"dfd1f5e8.385858","x":590,"y":500,"wires":[]},{"id":"a24265d4.6d5678","type":"function","z":"78ad5814.379f3","name":"","func":"\n// prepare for an HTTP call\nmsg.method = \"POST\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.url= 'http://localhost:3000/SetNewHeartBeat'\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":130,"y":460,"wires":[["5add870d.4b28c"]]},{"id":"8fc766a0.ee9ea","type":"particle-config","clientId":"coolrulesengineflow1-6921","clientSecret":"71fefbd9c2061438c76170927c9e43256d2d7138"},{"id":"dfd1f5e8.385858","type":"websocket-client","path":"ws://localhost:6969","tls":"","wholemsg":"false"}]
